/// Load
@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:math';
@use 'sass:string';
@use './../settings' as setting;
/// Mixin
@function negative-margins($value, $array) {
    @if (meta.type-of($array) ==map) {
        @if not map.get($array, $value) {
            $new-value: string.slice($value, 2);
            // @error $new-value;
            @if not map.has-key($array, $new-value) {
                @error '#{$value} Values of egative-margins not exists in spacer variable';
            }
            $negative: (
                $value: map.get($array, $new-value) * -1,
            );
            @return map.merge($array, $negative);
        }
    }
    @return true;
}
@function spacer-infix($key, $map) {
    // Check if $name value exists in map checks the value $name if not exists in the map
    // return null, otherwise returns -#{$name}
    $value: string.slice($key, 3);
    $new-value: setting.str-replace($key, setting.$dot, setting.$state + setting.$dot);
    $infix: if(map.has-key($map, $value), $new-value, '');
    // Log debug $infix
    // @debug "breakpoint-infix #{$infix}";
    // Returned
    @return $infix;
}
