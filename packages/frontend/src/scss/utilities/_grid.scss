/// Load
@use 'sass:meta';
@use 'sass:string';
@use 'sass:list';
@use 'sass:map';
@use '../settings' as setting;
@use '../mixins' as mixin;
/// @mixin
@mixin grid-param($property, $class, $value) {
    @if $value {
        /// Get list property
        $value-list: map.get(setting.$grids, 'values');
        /// Check media
        /// md: -- lg: -- xl:
        $breakpoint-key: mixin.breakpoint-isset($value, setting.$colon);
        @if $breakpoint-key {
            $start-at: setting.find($value, setting.$colon, $find: 'start');
            $end-at: setting.find($value, setting.$colon, $find: 'end');
            $infix: mixin.breakpoint-infix($start-at, setting.$breakpoints);
            @if setting.isset($end-at, $value-list) {
                @include mixin.media-breakpoint-down($start-at) {
                    .#{$infix}#{$class}-#{$end-at} {
                        @include mixin.make-col(
                            map.get($value-list, $end-at),
                            $columns: setting.$grid-columns
                        );
                    }
                }
            }
        } @else {
            @if setting.isset($value, $value-list) {
                .#{$class}-#{$value} {
                    @include mixin.make-col(
                        map.get($value-list, $value),
                        $columns: setting.$grid-columns
                    );
                }
            }
        }
    }
}

@mixin grid($property, $class, $values) {
    @each $value in $values {
        @include grid-param($property, $class, $value);
    }
}
